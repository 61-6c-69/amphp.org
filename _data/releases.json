[{"name":"amphp\/byte-stream 2.0.0","package":"amphp\/byte-stream","tag_name":"v2.0.0","html_url":"https:\/\/github.com\/amphp\/byte-stream\/releases\/tag\/v2.0.0","date":"2023-01-07T16:35:34Z","body":"Initial beta release compatible with AMPHP v3 and fibers.\r\n\r\nThere are a number of renaming and compatibility breaks with `1.x` versions:\r\n\r\n- Added interface `ResourceStream`\r\n- `InputStream` has been renamed to `ReadableStream` and now extends `Amp\\Closable`. The `read()` method now supports an optional `Cancellation` parameter.\r\n- `OutputStream` has been renamed to `WritableStream` and now extends `Amp\\Closable`. `WritableStream::end()` no longer accepts an optional data chunk as parameter.\r\n- `IteratorStream` has been repalced by `ReadableIterableStream`, which accepts any `iterable` of `string`s (particularly useful with `Generator` or `Pipeline`).\r\n- `ResourceInputStream` has been renamed to `ReadableResourceStream`. The `read()` method has an additional, optional `$limit` parameter to specify the maximum number of bytes to read.\r\n- `ResourceOutputStream` has been renamed to `WritableResourceStream`.\r\n- `InMemoryStream` has been renamed to `ReadableBuffer`.\r\n- `OutputBuffer` has been renamed to `WritableBuffer`.\r\n- `Payload` now accepts a `string` in addition to a `ReadableStream` and is `final` now. `Payload::buffer()` may only be called once.\r\n- Added a `$limit` param to `Amp\\ByteStream\\buffer()` and `Payload::buffer()` to set a limit on the maximum bytes that can be buffered.\r\n- Added `BufferedReader`, a helper class for reading from `ReadableStream` using fixed lengths or delimiters found within the stream (#94)\r\n- Added `Pipe`.\r\n- Added `StreamChannel` implementing the `Channel` interface from `amphp\/sync`.\r\n- The zlib streams have been moved into the `Compression` sub-namespace and renamed to `CompressingWritableStream` and `DecompressingReadableStream`.\r\n- Add `CompressingReadableStream` (https:\/\/github.com\/amphp\/byte-stream\/pull\/99)\r\n- Add `DecompressingWritableStream` (https:\/\/github.com\/amphp\/byte-stream\/pull\/99)\r\n- The base64 streams have been renamed to reflect the new interface names.\r\n- `InputStreamChain` has been renamed to `ReadableStreamChain`.\r\n- Renamed the `$options` param of `parseLineDelimitedJson` to `$flags` to match the `json_decode` function.","revolt":true},{"name":"amphp\/sql-common 1.1.4","package":"amphp\/sql-common","tag_name":"v1.1.4","html_url":"https:\/\/github.com\/amphp\/sql-common\/releases\/tag\/v1.1.4","date":"2023-01-06T04:33:14Z","body":"- Fixed potential double deferred resolve when a connection pool is full.","revolt":false},{"name":"amphp\/sync 2.0.0","package":"amphp\/sync","tag_name":"v2.0.0","html_url":"https:\/\/github.com\/amphp\/sync\/releases\/tag\/v2.0.0","date":"2022-12-30T23:05:19Z","body":"Stable release compatible with AMPHP v3 and fibers! &#x1F389;\r\n\r\nAs with other libraries compatible with AMPHP v3, most cases of parameters or returns of `Promise<ResolutionType>` have been replaced with `ResolutionType`.\r\n\r\n#### Changes from 1.x\r\n - `ConcurrentIterator` functions have been removed are now available as methods on `Pipeline` in `amphp\/pipeline`\r\n - `FileMutex` has been removed, as a better implementation ships as part of `amphp\/file`\r\n - Removed `ThreadedMutex` and `ThreadedSemaphore`\r\n - Removed `Lock::getId()`\r\n - `Barrier::await` supports cancellation now\r\n - `synchronized` accepts any `Semaphore` now instead of a `Mutex` only\r\n - Added `Channel` from `amphp\/parallel`, which allows two way communicate between execution contexts, such as two coroutines or two processes. `Channel` has been modified to extend `Closable`\r\n- Also added `Parcel` from `amphp\/parallel`, which allows sharing a value across execution contexts with mutually-exclusive access to modifying that value using `Parcel::synchronized()`.\r\n- Added `createChannelPair()` function which returns a pair of connected `Channel` objects.\r\n- Added `RateLimitingSemaphore` which releases locks after a given time elapses.\r\n- Added `StaticKeySemaphore`, analogous to `StaticKeyMutex`\r\n\r\n#### Changes from 2.0.0 Beta 6\r\n- Added `RateLimitingSemaphore` which releases locks after a given time elapses.\r\n- Added `StaticKeySemaphore`, analogous to `StaticKeyMutex`","revolt":true},{"name":"amphp\/parser 1.1.0","package":"amphp\/parser","tag_name":"v1.1.0","html_url":"https:\/\/github.com\/amphp\/parser\/releases\/tag\/v1.1.0","date":"2022-12-30T19:26:39Z","body":"- PHP 7.4 now required\r\n- Improved performance of the parser when requesting small chunks of data and when yielding an integer length delimiter","revolt":true},{"name":"amphp\/pipeline 1.0.0","package":"amphp\/pipeline","tag_name":"v1.0.0","html_url":"https:\/\/github.com\/amphp\/pipeline\/releases\/tag\/v1.0.0","date":"2022-12-23T16:56:59Z","body":"Initial stable release &#x1F389;\r\n\r\n#### Changes from 1.0.0 Beta 7\r\n- Marked `ConcurrentArrayIterator`, `ConcurrentChainedIterator`, and `ConcurrentIterableIterator` as `@internal`. Instead of these classes, use `Pipeline::fromIterable()` or `Pipeline::concat()`\r\n- `Pipeline::concat()` now accepts an array of any `iterable`, not only other `Pipeline` objects","revolt":true},{"name":"amphp\/sql 1.0.2","package":"amphp\/sql","tag_name":"v1.0.2","html_url":"https:\/\/github.com\/amphp\/sql\/releases\/tag\/v1.0.2","date":"2022-12-18T23:03:07Z","body":"- Fix a deprecation notice on PHP 8.1 if a configuration key does not have a value.","revolt":false},{"name":"amphp\/postgres 1.4.4","package":"amphp\/postgres","tag_name":"v1.4.4","html_url":"https:\/\/github.com\/amphp\/postgres\/releases\/tag\/v1.4.4","date":"2022-12-18T23:01:13Z","body":"- Fixed `MONEY` type columns from being cast to a float with `ext-pgsql`, which always resulted in a value of 0. `MONEY` columns will now be returned as a string, matching `ext-pq`.","revolt":false},{"name":"amphp\/phpunit-util 3.0.0","package":"amphp\/phpunit-util","tag_name":"v3.0.0","html_url":"https:\/\/github.com\/amphp\/phpunit-util\/releases\/tag\/v3.0.0","date":"2022-12-18T17:53:05Z","body":"This package has been redesigned for compatibility with AMPHP v3 and fibers. `AsyncTestCase` serves a similar purpose as before, providing helper methods for unit testing within an async context. Each test case is run within a unique fiber to allow suspending during the test run.\r\n\r\n- `AsyncTestCase::setUpAsync()` and `tearDownAsync()` have been removed. Use `AsyncTestCase::setUp()` and `tearDown()` instead, as both of these methods are now able to execute async using fibers.\r\n- `AsyncTestCase::createCallback()` now returns a `Closure`. Additionally, an optional parameter for expected arguments upon invocation have been added (uses `InvocationMocker::with(...)` to set expected arguments).","revolt":true},{"name":"amphp\/amp 3.0.0","package":"amphp\/amp","tag_name":"v3.0.0","html_url":"https:\/\/github.com\/amphp\/amp\/releases\/tag\/v3.0.0","date":"2022-12-18T17:13:34Z","body":"\r\n#### Event Loop\r\n\r\nAmp no longer ships its own event loop. It's now based on [Revolt](https:\/\/revolt.run). `Revolt\\EventLoop` is quite similar to Amp's previous `Amp\\Loop`. A very important difference is using `float $seconds` instead of `int $milliseconds` for timers though!\r\n\r\n#### Promises\r\n\r\n`Future` is a replacement for the previous `Promise`.\r\nThere's no need for callbacks or `yield` anymore!\r\nIts `await()` method is based on fibers and replaces generator based coroutines \/ `Amp\\Promise\\wait()`.\r\n\r\n- Renamed `Amp\\Deferred` to `Amp\\DeferredFuture`.\r\n- Removed `Amp\\Promise\\wait()`: Use `Amp\\Future::await()` instead, which can be called in any (nested) context unlike before.\r\n- Removed `Amp\\call()`: Remove the passed closure boilerplate and all `yield` keywords, interruption is handled via fibers now instead of generator coroutines.\r\n- Removed `Amp\\asyncCall()`: Replace invocations with `Amp\\async()`, which starts a new fiber instead of using generators.\r\n- Removed `Amp\\coroutine()`: There's no direct replacement.\r\n- Removed `Amp\\asyncCoroutine()`: There's no direct replacement.\r\n- Removed `Amp\\Promise\\timeout()`: `Future::await()` accepts an optional `Cancellation`, which can be used as a replacement.\r\n- Removed `Amp\\Promise\\rethrow()`: Unhandled errors are now automatically thrown into the event loop, so there's no need for that function anymore.\r\n- Unhandled errors can be ignored using `Future::ignore()` if needed, but should usually be handled in some way.\r\n- Removed `Amp\\Promise\\wrap()`: Use `Future::finally()` instead.\r\n- Renamed `Amp\\getCurrentTime()` to `Amp\\now()` returning the time in seconds instead of milliseconds.\r\n- Changed `Amp\\delay()` to accept the delay in seconds now instead of milliseconds.\r\n- Added `Amp\\weakClosure()` to allow a class to hold a self-referencing Closure without creating a circular reference that prevents automatic garbage collection.\r\n- Added `Amp\\trapSignal()` to await one or multiple signals.\r\n\r\n#### Promise Combinators\r\n\r\nPromise combinators have been renamed:\r\n\r\n- `Amp\\Promise\\race()` has been renamed to `Amp\\Future\\awaitFirst()`\r\n- `Amp\\Promise\\first()` has been renamed to `Amp\\Future\\awaitAny()`\r\n- `Amp\\Promise\\some()` has been renamed to `Amp\\Future\\awaitAnyN()`\r\n- `Amp\\Promise\\any()` has been renamed to `Amp\\Future\\awaitAll()`\r\n- `Amp\\Promise\\all()` has been renamed to `Amp\\Future\\await()`\r\n\r\n#### CancellationToken\r\n\r\n- `CancellationToken` has been renamed to `Cancellation`.\r\n- `CancellationTokenSource` has been renamed to `DeferredCancellation`.\r\n- `NullCancellationToken` has been renamed to `NullCancellation`.\r\n- `TimeoutCancellationToken` has been renamed to `TimeoutCancellation`.\r\n- `CombinedCancellationToken` has been renamed to `CompositeCancellation`.\r\n- `SignalCancellation` has been added.\r\n\r\n#### Iterators\r\n\r\nIterators have been removed from `amphp\/amp` as normal PHP iterators can be used with fibers now and there's no need for a separate API.\r\nHowever, there's still some need for _concurrent_ iterators, which is covered by the new [`amphp\/pipeline`](https:\/\/github.com\/amphp\/pipeline) library now.\r\n\r\n#### Closable\r\n\r\n`Amp\\Closable` has been added as a new basic interface for closable resources such as streams or sockets.\r\n\r\n#### Strict Types\r\n\r\nStrict types now declared in all library files.\r\nThis will affect callbacks invoked within this library's code which use scalar types as parameters.\r\nFunctions used with `Amp\\async()` are the most likely to be affected by this change \u2014 these functions will now be invoked within a strict-types context.","revolt":true},{"name":"amphp\/php-cs-fixer-config 2.0.0","package":"amphp\/php-cs-fixer-config","tag_name":"v2.0.0","html_url":"https:\/\/github.com\/amphp\/php-cs-fixer-config\/releases\/tag\/v2.0.0","date":"2022-12-18T15:51:30Z","body":" - Common code style for all packages based on Amp v3.\r\n - Now includes `strict_types` and several other minor updates.","revolt":true},{"name":"amphp\/http 1.7.0","package":"amphp\/http","tag_name":"v1.7.0","html_url":"https:\/\/github.com\/amphp\/http\/releases\/tag\/v1.7.0","date":"2022-10-16T20:39:45Z","body":" - Expose frame and byte count metrics in `Http2Parser`\r\n - Reduce `strtolower` calls, improving performance\r\n - Relax parsing strictness for request cookies to ignore empty trailing semicolons (https:\/\/github.com\/amphp\/http\/pull\/18)","revolt":true},{"name":"amphp\/file 2.0.4","package":"amphp\/file","tag_name":"v2.0.4","html_url":"https:\/\/github.com\/amphp\/file\/releases\/tag\/v2.0.4","date":"2022-09-08T17:25:26Z","body":"- Fix `createDirectoryRecursively` with trailing slash in async drivers (https:\/\/github.com\/amphp\/file\/issues\/70, https:\/\/github.com\/amphp\/file\/pull\/71)","revolt":false},{"name":"amphp\/http-server 2.1.7","package":"amphp\/http-server","tag_name":"v2.1.7","html_url":"https:\/\/github.com\/amphp\/http-server\/releases\/tag\/v2.1.7","date":"2022-08-16T21:10:27Z","body":"- Fixed buffer timeout in `CompressionMiddleware` added in the last release not actually being set (#339)","revolt":false},{"name":"amphp\/process 1.1.4","package":"amphp\/process","tag_name":"v1.1.4","html_url":"https:\/\/github.com\/amphp\/process\/releases\/tag\/v1.1.4","date":"2022-07-07T03:42:00Z","body":"- Fixed ended processes sometimes leaving zombie processes on *nix systems (requires `ext-pcntl`, an optional dependency)","revolt":false},{"name":"amphp\/http-server-session 2.0.0","package":"amphp\/http-server-session","tag_name":"v2.0.0","html_url":"https:\/\/github.com\/amphp\/http-server-session\/releases\/tag\/v2.0.0","date":"2022-05-14T15:53:15Z","body":"Changes from 2.0.0 Beta 4\r\n\r\n- Removed the `Serializer` interface and implementations in favor of using those in `amphp\/seraliziation`","revolt":false},{"name":"amphp\/http-server-form-parser 1.1.5","package":"amphp\/http-server-form-parser","tag_name":"v1.1.5","html_url":"https:\/\/github.com\/amphp\/http-server-form-parser\/releases\/tag\/v1.1.5","date":"2022-04-30T15:16:52Z","body":"- Added methods `parseBody`, `parseUrlEncodedBody`, and `parseMultipartBody` to `BufferingParser` to parse request bodies that have already been buffered (#10)\r\n- Added `parseContentBoundary` function that returns the content boundary from a multipart header.","revolt":false},{"name":"amphp\/websocket 1.0.3","package":"amphp\/websocket","tag_name":"v1.0.3","html_url":"https:\/\/github.com\/amphp\/websocket\/releases\/tag\/v1.0.3","date":"2022-04-11T23:50:33Z","body":"- Added `GOING_AWAY` to the list of normal close codes, which will cause `Client::receive()` to return null instead of throwing an exception if a browser sends this code when navigating away from a page\r\n- Fixed undefined array access in rare case where the event loop is exited after receiving a message on the websocket and then re-entered at a later time (amphp\/websocket-client#39)","revolt":false},{"name":"amphp\/http-server-static-content 1.0.7","package":"amphp\/http-server-static-content","tag_name":"v1.0.7","html_url":"https:\/\/github.com\/amphp\/http-server-static-content\/releases\/tag\/v1.0.7","date":"2022-04-10T14:49:03Z","body":"- Compatibility with `amphp\/file` @ `2.x`","revolt":false},{"name":"amphp\/websocket-client 1.0.1","package":"amphp\/websocket-client","tag_name":"v1.0.1","html_url":"https:\/\/github.com\/amphp\/websocket-client\/releases\/tag\/v1.0.1","date":"2022-03-10T20:11:00Z","body":" - Ignore `\/docs` in `.gitattributes` to avoid broken symlink (#38)\r\n\r\n**Full Changelog**: https:\/\/github.com\/amphp\/websocket-client\/compare\/v1.0.0...v1.0.1","revolt":false},{"name":"amphp\/parallel-functions 1.1.0","package":"amphp\/parallel-functions","tag_name":"v1.1.0","html_url":"https:\/\/github.com\/amphp\/parallel-functions\/releases\/tag\/v1.1.0","date":"2022-02-03T19:56:18Z","body":"## What's Changed\r\n - Update to `laravel\/serializable-closure` instead of `opis\/closure` by @owenvoke\r\n - Increase minimum PHP version to PHP 7.4 by @owenvoke\r\n\r\n## New Contributors\r\n* @sci3ma made their first contribution in https:\/\/github.com\/amphp\/parallel-functions\/pull\/24\r\n* @owenvoke made their first contribution in https:\/\/github.com\/amphp\/parallel-functions\/pull\/31\r\n\r\n**Full Changelog**: https:\/\/github.com\/amphp\/parallel-functions\/compare\/v1.0.0...v1.1.0","revolt":false},{"name":"amphp\/rpc 1.0.0","package":"amphp\/rpc","tag_name":"v1.0.0","html_url":"https:\/\/github.com\/amphp\/rpc\/releases\/tag\/v1.0.0","date":"2022-02-02T22:13:33Z","body":"Initial release.","revolt":false},{"name":"amphp\/redis 1.0.7","package":"amphp\/redis","tag_name":"v1.0.7","html_url":"https:\/\/github.com\/amphp\/redis\/releases\/tag\/v1.0.7","date":"2022-01-11T17:04:34Z","body":"- Fixed a case where an exception may be thrown to the event loop when a `Subscriber` lost connection to the Redis server.","revolt":false},{"name":"amphp\/cluster 1.0.1","package":"amphp\/cluster","tag_name":"v1.0.1","html_url":"https:\/\/github.com\/amphp\/cluster\/releases\/tag\/v1.0.1","date":"2021-12-14T00:48:53Z","body":"Update to use [`amphp\/file`](https:\/\/github.com\/amphp\/file) `v2.x`.","revolt":false},{"name":"amphp\/mysql 2.1.2","package":"amphp\/mysql","tag_name":"v2.1.2","html_url":"https:\/\/github.com\/amphp\/mysql\/releases\/tag\/v2.1.2","date":"2021-12-05T16:42:20Z","body":"- Fixed a bug when decoding a JSON field (#113)","revolt":false},{"name":"amphp\/parallel 1.4.1","package":"amphp\/parallel","tag_name":"v1.4.1","html_url":"https:\/\/github.com\/amphp\/parallel\/releases\/tag\/v1.4.1","date":"2021-10-25T20:03:47Z","body":"## What's Changed\r\n* Replace Artax with http-client by @ishan-biztech and @voku in https:\/\/github.com\/amphp\/parallel\/pull\/135 and https:\/\/github.com\/amphp\/parallel\/pull\/136\r\n* PHP 8 support by @danog in https:\/\/github.com\/amphp\/parallel\/pull\/138\r\n* PHP 8.1 support by @kelunik \r\n\r\n## New Contributors\r\n* @ishan-biztech made their first contribution in https:\/\/github.com\/amphp\/parallel\/pull\/135\r\n* @voku made their first contribution in https:\/\/github.com\/amphp\/parallel\/pull\/136\r\n* @danog made their first contribution in https:\/\/github.com\/amphp\/parallel\/pull\/138\r\n\r\n**Full Changelog**: https:\/\/github.com\/amphp\/parallel\/compare\/v1.4.0...v1.4.1","revolt":false},{"name":"amphp\/http-client-cookies 1.2.0","package":"amphp\/http-client-cookies","tag_name":"v1.2.0","html_url":"https:\/\/github.com\/amphp\/http-client-cookies\/releases\/tag\/v1.2.0","date":"2021-10-21T20:59:11Z","body":" - Added compatibility with `amphp\/file` v2\r\n - Updated public suffix list","revolt":false},{"name":"amphp\/http-client 4.6.2","package":"amphp\/http-client","tag_name":"v4.6.2","html_url":"https:\/\/github.com\/amphp\/http-client\/releases\/tag\/v4.6.2","date":"2021-10-09T14:13:49Z","body":"- Fixed `setBodySizeLimit(0)` with HTTP\/2 protocol (#297)","revolt":false},{"name":"amphp\/socket 1.2.0","package":"amphp\/socket","tag_name":"v1.2.0","html_url":"https:\/\/github.com\/amphp\/socket\/releases\/tag\/v1.2.0","date":"2021-07-09T18:25:54Z","body":" - Add support for TLS 1.3 (#82)","revolt":false},{"name":"amphp\/cache 1.5.0","package":"amphp\/cache","tag_name":"v1.5.0","html_url":"https:\/\/github.com\/amphp\/cache\/releases\/tag\/v1.5.0","date":"2021-06-29T17:17:01Z","body":" - Add support for `amphp\/file` v2","revolt":false},{"name":"amphp\/hpack 3.1.1","package":"amphp\/hpack","tag_name":"v3.1.1","html_url":"https:\/\/github.com\/amphp\/hpack\/releases\/tag\/v3.1.1","date":"2021-06-25T16:22:58Z","body":"- Work around https:\/\/bugs.php.net\/bug.php?id=79749\r\n- Fixed deprecation warning in PHP 8.1 (#11)","revolt":true},{"name":"amphp\/beanstalk 0.3.2","package":"amphp\/beanstalk","tag_name":"v0.3.2","html_url":"https:\/\/github.com\/amphp\/beanstalk\/releases\/tag\/v0.3.2","date":"2020-11-18T18:43:53Z","body":" - Added support for Symfony YAML library v4 and v5. (#34)\r\n","revolt":false},{"name":"amphp\/dns 1.2.3","package":"amphp\/dns","tag_name":"v1.2.3","html_url":"https:\/\/github.com\/amphp\/dns\/releases\/tag\/v1.2.3","date":"2020-07-21T19:39:19Z","body":" - Improved error message if no response was received\r\n","revolt":false},{"name":"amphp\/windows-registry 0.3.3","package":"amphp\/windows-registry","tag_name":"v0.3.3","html_url":"https:\/\/github.com\/amphp\/windows-registry\/releases\/tag\/v0.3.3","date":"2020-07-10T16:20:02Z","body":" - Fix possible undefined offset\r\n - Fix broken symlink in releases\r\n","revolt":false},{"name":"amphp\/websocket-server 2.0.0","package":"amphp\/websocket-server","tag_name":"v2.0.0","html_url":"https:\/\/github.com\/amphp\/websocket-server\/releases\/tag\/v2.0.0","date":"2020-07-05T17:52:19Z","body":"### Changes since RC3\r\n\r\n- Renamed `Endpoint` to `Gateway`. An alias to `Endpoint` is provided for compatibility.\r\n- Renamed `WebsocketObserver` to `WebsocketServerObserver`.\r\n\r\n### Upgrading from v1.x to v2.0\r\n\r\nThis library has been refactored to use the new [`amphp\/websocket`](https:\/\/github.com\/amphp\/websocket) library containing components that can be shared between server and clients.\r\n\r\n`Websocket` is now a final class that requires an instance of `ClientHandler`, which has two methods to handle client handshakes and the client connection.\r\n- `handleHandshake()`: This method is invoked when a WebSocket connection attempt is made. The application may alter the given Response to deny the connection attempt or set application-specific headers.\r\n- `handleClient()`: This method is invoked upon a successful WebSocket connection. This method should use a loop to receive messages from the WebSocket connection.\r\n\r\n```php\r\nuse Amp\\Http\\Server\\Request;\r\nuse Amp\\Http\\Server\\Response;\r\nuse Amp\\Http\\Status;\r\nuse Amp\\Success;\r\nuse Amp\\Websocket\\Client;\r\nuse Amp\\Websocket\\Server\\ClientHandler;\r\nuse Amp\\Websocket\\Server\\Gateway;\r\nuse Amp\\Websocket\\Server\\Websocket;\r\n\r\n$websocket = new Websocket(new class implements ClientHandler {\r\n    public function handleHandshake(Gateway $gateway, Request $request, Response $response): Promise\r\n    {\r\n        if (!\\in_array($request->getHeader('origin'), ['http:\/\/localhost:1337', 'http:\/\/127.0.0.1:1337', 'http:\/\/[::1]:1337'], true)) {\r\n            return $gateway->getErrorHandler()->handleError(Status::FORBIDDEN, 'Origin forbidden', $request);\r\n        }\r\n\r\n        return new Success($response);\r\n    }\r\n\r\n    public function handleClient(Gateway $gateway, Client $client, Request $request, Response $response): Promise\r\n    {\r\n        return Amp\\call(function () use ($gateway, $client) {\r\n            while ($message = yield $client->receive()) {\r\n                \\assert($message instanceof Message);\r\n                $gateway->broadcast(\\sprintf('%d: %s', $client->getId(), yield $message->buffer()));\r\n            }\r\n        });\r\n    }\r\n});\r\n```\r\n\r\nWebSocket clients are now represented by a [`Client`](https:\/\/github.com\/amphp\/websocket\/blob\/v1.0.0\/src\/Client.php) object. This object contains several methods for getting information about the client and for sending messages to a single client.\r\n\r\nServers can send to multiple clients using `Gateway::broadcast()` and `Gateway::multicast()` (plus binary versions, `Gateway::broadcastBinary()` and `Gateway::multicastBinary()`). A `Gateway` instance is provided to `ClientHandler::handleHandshake()` and `ClientHandler::handleClient()`.\r\n","revolt":false},{"name":"amphp\/serialization 1.0.0","package":"amphp\/serialization","tag_name":"v1.0.0","html_url":"https:\/\/github.com\/amphp\/serialization\/releases\/tag\/v1.0.0","date":"2020-03-28T14:03:14Z","body":"Initial release.","revolt":true},{"name":"amphp\/http-tunnel 1.0.0","package":"amphp\/http-tunnel","tag_name":"v1.0.0","html_url":"https:\/\/github.com\/amphp\/http-tunnel\/releases\/tag\/v1.0.0","date":"2019-12-31T17:10:50Z","body":"Initial release.","revolt":false},{"name":"amphp\/http-client-cache 1.0.0","package":"amphp\/http-client-cache","tag_name":"v1.0.0","html_url":"https:\/\/github.com\/amphp\/http-client-cache\/releases\/tag\/v1.0.0","date":"2019-12-21T19:52:55Z","body":"Initial release.","revolt":false},{"name":"amphp\/react-adapter 2.1.0","package":"amphp\/react-adapter","tag_name":"v2.1.0","html_url":"https:\/\/github.com\/amphp\/react-adapter\/releases\/tag\/v2.1.0","date":"2019-11-04T22:20:56Z","body":" - `React\\EventLoop\\Factory` is now automatically replaced with another implementation that throws on each usage to prevent two loops existing concurrently by accident.\r\n   Set `AMP_REACT_ADAPTER_DISABLE_FACTORY_OVERRIDE=1` as environment variable or constant to disable this protection.","revolt":false},{"name":"amphp\/log 1.1.0","package":"amphp\/log","tag_name":"v1.1.0","html_url":"https:\/\/github.com\/amphp\/log\/releases\/tag\/v1.1.0","date":"2019-09-04T17:21:01Z","body":"- Increased minimum PHP version to 7.1.\r\n- Now compatible with Monolog v2.0+ and v1.23+.","revolt":false},{"name":"amphp\/http-server-router 1.0.2","package":"amphp\/http-server-router","tag_name":"v1.0.2","html_url":"https:\/\/github.com\/amphp\/http-server-router\/releases\/tag\/v1.0.2","date":"2019-08-21T15:53:16Z","body":"Allow `amphp\/http-server@^2`","revolt":false},{"name":"amphp\/react-stream-adapter 0.1.0","package":"amphp\/react-stream-adapter","tag_name":"v0.1.0","html_url":"https:\/\/github.com\/amphp\/react-stream-adapter\/releases\/tag\/v0.1.0","date":"2018-03-07T10:13:55Z","body":"Initial release.","revolt":false}]